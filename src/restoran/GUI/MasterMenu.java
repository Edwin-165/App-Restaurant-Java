/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package restoran.GUI;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import restoran.DAO.KategoriDAO;
import restoran.dao.MenuDAO;
import restoran.model.Kategori;
import restoran.model.Menu;

/**
 *
 * @author USER
 */
public class MasterMenu extends javax.swing.JFrame {

    /**
     * Creates new form Menu
     */
    public MasterMenu() {
        initComponents();
        loadTable();
        loadKategori();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        comboBoxKategori = new javax.swing.JComboBox<>();
        txtNamaMenu = new javax.swing.JTextField();
        txtHarga = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableMenu = new javax.swing.JTable();
        addButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        Kembali = new javax.swing.JButton();
        Refresh = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("MASTER MENU");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 20, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nama Menu");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 55, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Kategori");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 83, -1, -1));

        comboBoxKategori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxKategoriActionPerformed(evt);
            }
        });
        getContentPane().add(comboBoxKategori, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 83, 221, -1));
        getContentPane().add(txtNamaMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(316, 55, 220, -1));

        txtHarga.setToolTipText("");
        getContentPane().add(txtHarga, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 111, 221, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Harga");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 111, -1, -1));

        tableMenu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Menu", "Kategori", "Harga"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableMenu);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 192, 490, 275));

        addButton.setText("Tambah");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        getContentPane().add(addButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(463, 151, -1, -1));

        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });
        getContentPane().add(editButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(554, 253, -1, -1));

        deleteButton.setText("Hapus");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        getContentPane().add(deleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(554, 288, -1, -1));

        Kembali.setText("Kembali");
        Kembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KembaliActionPerformed(evt);
            }
        });
        getContentPane().add(Kembali, new org.netbeans.lib.awtextra.AbsoluteConstraints(463, 485, -1, -1));

        Refresh.setText("Refresh");
        Refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshActionPerformed(evt);
            }
        });
        getContentPane().add(Refresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(554, 218, -1, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/wallpaperflare.com_wallpaper.jpg"))); // NOI18N
        jLabel5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(-870, -490, 1510, 1060));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    void loadTable() {
        MenuDAO menuDAO = new MenuDAO();
        List<Menu> menus = menuDAO.readAll();
        DefaultTableModel model = (DefaultTableModel) tableMenu.getModel();
        model.setRowCount(0); // Bersihkan data lama
        for (Menu menu : menus) {
            model.addRow(new Object[]{
                menu.getNama(),
                getKategoriById(menu.getIdKategori()), // Fungsi untuk mendapatkan nama kategori
                menu.getHarga()
            });
        }
    }
    
    private void loadKategori() {
        KategoriDAO kategoriDAO = new KategoriDAO();
        List<Kategori> kategoris = kategoriDAO.readAll();
        comboBoxKategori.removeAllItems(); // Hapus item lama
        for (Kategori kategori : kategoris) {
            comboBoxKategori.addItem(kategori.getNamaKategori());
        }
    }


    private String getKategoriById(int idKategori) {
        KategoriDAO kategoriDAO = new KategoriDAO();
        Kategori kategori = kategoriDAO.read(idKategori);
        return kategori != null ? kategori.getNamaKategori() : "Tidak Diketahui";
    }
    
    
    private void KembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KembaliActionPerformed
        new Dashboard().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_KembaliActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        try{
            String namaMenu = txtNamaMenu.getText().trim();
            String namaKategori = (String) comboBoxKategori.getSelectedItem();
            String Hargainput = txtHarga.getText().trim();
            
            //validate nama item
            if(namaMenu.isEmpty()){
                JOptionPane.showMessageDialog(this, "Nama item tidak boleh kosong", "Error", JOptionPane.ERROR_MESSAGE);  
                return;
            }
            
            //validate harga (int apa bukan)
            double harga;
            try{
                harga = Double.parseDouble(Hargainput);
            }catch (NumberFormatException e){
                JOptionPane.showMessageDialog(this, "Masukkan Harga yang valid", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            //validate harga (harus value positif)
            if(harga>0){
                // Ambil ID Kategori berdasarkan nama
                KategoriDAO kategoriDAO = new KategoriDAO();
                Kategori kategori = new Kategori();
                kategori.setNamaKategori(namaKategori);
                int idKategori = kategoriDAO.getIdByName(kategori);

                // Simpan menu ke database
                MenuDAO menuDAO = new MenuDAO();
                Menu menu = new Menu(0, idKategori, namaMenu, harga);
                menuDAO.create(menu);

                //Refresh tabel
                loadTable();
            }else{
                JOptionPane.showMessageDialog(this, "Harga tidak boleh negatif", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }catch (Exception e){
                JOptionPane.showMessageDialog(this, "Terjadi kesalahan" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void comboBoxKategoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxKategoriActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxKategoriActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        int selectedRow = tableMenu.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih menu yang ingin diubah!");
            return;
        }

        // Ambil data dari JTable
        String namaMenu = tableMenu.getValueAt(selectedRow, 0).toString();
        String kategori = tableMenu.getValueAt(selectedRow, 1).toString();
        double harga = Double.parseDouble(tableMenu.getValueAt(selectedRow, 2).toString());

        // Cari ID menu berdasarkan nama menu dan kategori
        MenuDAO menuDAO = new MenuDAO();
        int idMenu = menuDAO.getIdByName(namaMenu, kategori); // Perlu fungsi getIdByName di MenuDAO

        // Tampilkan form Edit dengan data
        UpdateMenu formMenu = new UpdateMenu(idMenu, namaMenu, kategori, harga);
        formMenu.setVisible(true);
    }//GEN-LAST:event_editButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        int selectedRow = tableMenu.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih menu yang ingin dihapus!");
            return;
        }

        // Ambil data dari JTable
        String namaMenu = tableMenu.getValueAt(selectedRow, 0).toString();
        String kategori = tableMenu.getValueAt(selectedRow, 1).toString();

        // Cari ID menu berdasarkan nama dan kategori
        MenuDAO menuDAO = new MenuDAO();
        int idMenu = menuDAO.getIdByName(namaMenu, kategori); // Fungsi getIdByName yang sama digunakan

        // Hapus data menu
        menuDAO.delete(idMenu);

        // Refresh tabel
        loadTable();
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void RefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshActionPerformed
        loadTable();
    }//GEN-LAST:event_RefreshActionPerformed

    
    
    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Kembali;
    private javax.swing.JButton Refresh;
    private javax.swing.JButton addButton;
    private javax.swing.JComboBox<String> comboBoxKategori;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableMenu;
    private javax.swing.JTextField txtHarga;
    private javax.swing.JTextField txtNamaMenu;
    // End of variables declaration//GEN-END:variables
}
